# Snippets are shortcuts for inserting text.
# Add or remove snippets from this file to make changes.
# Delete the file and restart Positron to get the defaults.


# Debugging
["print fstring"]
text = 'print(f"")'
move = 2

["logger fstring"]
text = 'logger.debug(f"")'
move = 2

["print debug"]
text = 'print(f"{expr=}")'
move = 4
select = 4

["logger debug"]
text = 'logger.debug(f"{expr=}")'
move = 4
select = 4

# Classes and methods
["class"]
text = '''

class ClassName:
    def __init__(self):
        pass
'''
move = 39
select = 9

["class verbose"]
text = '''

class ClassName(object):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
'''
move = 93
select = 9


["class init kivy"]
text = '''

    def __init__(self, **kwargs):
        """Initialize the class."""
        super().__init__(**kwargs)
'''

["method"]
text = '''

    def method(self):
        pass
'''
move = 21
select = 6

["class method"]
text = '''

    @classmethod
    def method(cls):
        pass
'''
move = 20
select = 6

["static method"]
text = '''

    @staticmethod
    def method():
        pass
'''
move = 17
select = 6

["property"]
text = '''

    @property
    def property(self):
        return 
'''
move = 24
select = 8

["repr"]
text = '''

    def __repr__(self) -> str:
        """Object repr."""
        cls_name = f"{self.__class__.__qualname__} object"
        idhex = f"at 0x{id(self):x}"
        return f"<{cls_name} {idhex}>"
'''
move = 10

["args kwargs"]
text = "*args, **kwargs"
select = -1

["mappable"]
text = '''

    def __getitem__(self, key):
        """Get item."""
        return getattr(self, key)

    def keys(self) -> tuple:
        """Enables mapping."""
        return tuple()
'''
move = 1
select = 7

# Documentation
["docstring"]
text = '"""Docstring"""'
move = 3
select = 9

["reference docstring"]
text = '"""See module documentation for details."""'
move = 30
select = 6

["override docstring"]
text = '"""Override base method."""'
move = 4
select = 6

# Miscallaneous
["fstring"]
text = 'f""'
move = 1

["code snippet"]
text = "\n```\n```\n"
move = 5

["code snippet python"]
text = "\n```python\n\n```\n"
move = 5

["template snippet"]
text = '{%  %}'
move = 3

["if name main"]
text = '''

def main():
    pass


if __name__ == "__main__":
    main()
'''
move = 41
select = 4
