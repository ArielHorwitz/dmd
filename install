#! /bin/bash

set -e

SRCDIR=$PWD/`dirname "$0"`
DATADIR=$SRCDIR/data
TMPDIR=/tmp/iukinstall
BINDIR=/usr/bin/iukbtw
CACHEDIR=/var/iukbtw/cache

APP_NAME=$(basename "$0")
ABOUT="Installer for iukbtw."
CLI=(
    --prefix "args_"
    -O "hostname;Use custom hostname;$(hostnamectl hostname);n"
    -f "user-files;Copy user files to home directory;;u"
    -f "binaries;Install binaries;;b"
    -f "config;Apply configurations;;c"
    -f "dependencies;Update and install dependencies (implies -b);;d"
    -f "system;Update system packages;;s"
    -f "all;All normal targets (no remote updates);;a"
    -f "all-really;All targets (including remote updates);;A"
)
CLI=$($DATADIR/spongecrab --name "$APP_NAME" --about "$ABOUT" "${CLI[@]}" -- "$@") || exit 1
eval "$CLI" || exit 1
# Post process args
[[ -z $args_dependencies ]] || args_binaries=1
if [[ -n $args_all_really ]]; then
    args_system=1
    args_dependencies=1
    args_all=1
fi
if [[ -n $args_all ]]; then
    args_config=1
    args_binaries=1
    args_user_files=1
fi
HOSTNAME=$args_hostname
NOTIFY_RELOGIN=$args_config

exit_with_error () {
    printf "\e[1;31m$1\e[0m\n" >&2
    exit 1
}
progress () { printf "\e[32m$1\e[0m\n" ; }
recreatedir () {
    [[ -d $1 ]] && sudo rm -rf $1
    sudo mkdir --parents $1
    sudo chown $EUID $1
}

setup_installation_dirs() {
    recreatedir $TMPDIR
    [[ -d $CACHEDIR/bin ]] || sudo mkdir -p $CACHEDIR/bin
    cd $TMPDIR
    echo "Source directory: $SRCDIR"
}

cleanup_installation() {
    progress "Cleaning up temporary installation files"
    sudo rm -rf $TMPDIR
}

update_system() {
    progress "Updating System"
    sudo pacman -Syuu --noconfirm
}

update_dependencies() {
    progress "Installing dependencies"
    # AUR (paru)
    if [[ -z $(paru --version 2>/dev/null) ]] then
        sudo pacman -S --quiet --needed --noconfirm base-devel git
        git clone --quiet --depth 1 --shallow-submodules https://aur.archlinux.org/paru.git $TMPDIR/paru
        cd $TMPDIR/paru
        makepkg -si --needed --noconfirm
    fi
    paru -S --quiet --needed --noconfirm $(cat $DATADIR/deps-aur.txt)
    # Cargo install
    cargo install $(cat $DATADIR/deps-rust.txt)
    # Web
    recreatedir $CACHEDIR/bin
    while read dep; do
        [[ -n $dep ]] || continue
        name=$(echo $dep | cut -d' ' -f1)
        url=$(echo $dep | cut -d' ' -f2-)
        wget --quiet --https-only --show-progress --output-document $CACHEDIR/bin/$name "$url"
        chmod +x $CACHEDIR/bin/$name
    done < $DATADIR/deps-web.txt
}

install_binaries() {
    TMPBIN=$TMPDIR/bin
    progress "Installing binaries"
    recreatedir $TMPBIN
    cp -r $SRCDIR/bin/* $TMPBIN
    cp -r $CACHEDIR/bin/* $TMPBIN
    # remove suffixes
    find $TMPBIN -maxdepth 1 -type f -name "*.*" -execdir bash -c 'mv "$0" "${0%.*}"' {} \;
    recreatedir $BINDIR
    sudo cp -r $TMPBIN/* $BINDIR
    sudo chmod +x --recursive $BINDIR
}

configure_group_iuk() {
    progress "Configuring iuk"
    local wd=$TMPDIR/sudoers
    mkdir $wd
    cp $DATADIR/sudoers $wd/50-iukbtw
    sudo checksudo --quiet --force --apply --noconfirm $wd/50-iukbtw
    sudo groupadd -f iukbtw
    sudo usermod -aG iukbtw $USER
}

configure_kmonad() {
    progress "Configuring KMonad"
    # Add udev rules for KMonad
    # (https://github.com/kmonad/kmonad/blob/master/doc/faq.md#q-how-do-i-get-uinput-permissions)
    # (https://github.com/kmonad/kmonad/issues/160#issuecomment-766121884)
    sudo groupadd -f uinput
    sudo usermod -aG input,uinput $USER
    sudo cp -f $DATADIR/uinput.conf /etc/modules-load.d/
    sudo cp -f $DATADIR/90-uinput.rules /etc/udev/rules.d/
}

copy_home_dir() {
    progress "Copying user files to $HOME"
    cd $SRCDIR/home
    recreatedir $TMPDIR/home
    cp -rf --parents . $TMPDIR/home
    local mp_pattern=$(matchpick --print-start)
    local mp_files=$(grep --files-with-match --recursive $mp_pattern $TMPDIR/home)
    for file in $mp_files; do
        matchpick $file -o $file -m $HOSTNAME
    done
    cd $TMPDIR/home
    cp -rf --parents . $HOME
}

# Checks
[[ $EUID -eq 0 ]] && exit_with_error "Do not run $0 as root."
[[ ! -d $SRCDIR ]] && exit_with_error "Failed to resolve source directory: $SRCDIR"
[[ ! -d $DATADIR ]] && exit_with_error "Missing data directory: $DATADIR"

# Installation
progress "Installing iukbtw"
setup_installation_dirs
[[ -z $args_system ]] || update_system
[[ -z $args_dependencies ]] || update_dependencies
[[ -z $args_binaries ]] || install_binaries
[[ -z $args_config ]] || configure_group_iuk
[[ -z $args_config ]] || configure_kmonad
[[ -z $args_user_files ]] || copy_home_dir
cleanup_installation
progress "Done."
[[ -z $NOTIFY_RELOGIN ]] || echo "You may need to login again for configs to apply."
