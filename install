#! /bin/bash

USAGE_TEXT="
Installer for iukbtw.

Usage: install [OPTIONS...]

Installation:
  -d, --update-dependencies
      Install and update dependencies.
  -s, --update-system
      Update system packages.
  -q, --quiet
      Show less output.
  -v, --verbose
      Show more verbose output.

Info:
  -h, --help
      Print this help and exit.
"

set -e

while [[ $@ ]]
do
    [[ -z $1 ]] && break
    arg=$1
    shift
    case $arg in
        -d | --update-dependencies )
            UPDATE_DEPENDENCIES=1
            continue;;
        -s | --update-system )
            UPDATE_SYSTEM=1
            continue;;
        -q | --quiet )
            VERB=""
            VERBQ="--quiet"
            QUIET="--quiet"
            continue;;
        -v | --verbose )
            VERB="--verbose"
            VERBQ="--verbose"
            QUIET=""
            continue;;
        -h | --help)
            echo "$USAGE_TEXT"
            exit 2;;
        *)
            echo "Unexpected option: $arg"
            echo "$USAGE_TEXT"
            exit 1;;
    esac
done

TMPDIR=/tmp/iukinstall
TMPBIN=/tmp/iukinstall/bin
SRCDIR=$PWD/`dirname "$0"`
DATADIR=$SRCDIR/data
BINDIR=/usr/bin/iukbtw
CONFDIR=/etc/iukbtw

exit_with_error () {
    printf "\e[1;31m$1\e[0m\n" >&2
    exit 1
}
title () { printf "\n\e[33m█▓▒░ $1 ░▒▓█\e[0m\n" ; }
recreatedir () {
    [[ -d $1 ]] && sudo rm -rf $1
    sudo mkdir --parents $1
}
showdir () {
    exa -laFTR --group-directories-first $@
}

[[ $EUID -eq 0 ]] && exit_with_error "Do not run $0 as root."
[[ ! -d $SRCDIR ]] && exit_with_error "Failed to resolve source directory: $SRCDIR"
[[ ! -d $DATADIR ]] && exit_with_error "Missing data directory: $DATADIR"

title "Installing iukbtw"
recreatedir $TMPDIR
recreatedir $TMPBIN
sudo chown --recursive $EUID $TMPDIR
cd $TMPDIR
echo "Source directory: $SRCDIR"

if [[ $UPDATE_SYSTEM ]]; then
    title "Updating System"
    sudo pacman $VERBQ -Syuu --noconfirm
fi

if [[ $UPDATE_DEPENDENCIES ]]; then
    title "Installing dependencies"
    # AUR (paru)
    if [[ -z $(paru --version 2>/dev/null) ]] then
        sudo pacman $VERBQ -S --needed --noconfirm base-devel git
        git clone $VERBQ https://aur.archlinux.org/paru.git $TMPDIR/paru
        cd $TMPDIR/paru
        makepkg -si --needed --noconfirm
    fi
    paru $VERBQ -S --needed --noconfirm $(cat $DATADIR/deps-aur.txt)
    # Cargo install
    cargo install $(cat $DATADIR/deps-rust.txt)
    # Web
    while read dep; do
        [[ -n $dep ]] || continue
        name=$(echo $dep | cut -d' ' -f1)
        url=$(echo $dep | cut -d' ' -f2-)
        [[ -z $VERB ]] || echo downloading $name from: $url
        wget $VERBQ --https-only --show-progress --output-document $TMPBIN/$name "$url"
        chmod +x $TMPBIN/$name
    done < $DATADIR/deps-web.txt
fi


title "Building iuk"
cargo build $QUIET --manifest-path $SRCDIR/iuk/Cargo.toml --release;
cp $VERB -ft $TMPBIN $(find $SRCDIR/iuk/target/release -maxdepth 1 -type f -executable);


title "Installing data"
recreatedir $CONFDIR
sudo cp -r $SRCDIR/etc/* $CONFDIR
[[ $QUIET ]] || showdir $CONFDIR

title "Installing binaries"
cp -r $SRCDIR/bin/* $TMPBIN
# remove suffixes
find $TMPBIN -maxdepth 1 -type f -name "*.*" -execdir bash -c 'mv "$0" "${0%.*}"' {} \;
recreatedir $BINDIR
sudo cp -r $TMPBIN/* $BINDIR
sudo chown --recursive root $BINDIR
sudo chmod +x --recursive $BINDIR
[[ $QUIET ]] || showdir $BINDIR


title "Configuring user $USER"
# Add sudoer rules -- check with visudo before copy!
sudo groupadd -f iukbtw && sudo usermod -aG iukbtw $USER
if [[ $(visudo -csf $DATADIR/sudoers | grep "parsed OK") = "" ]] ; then
    echo "Failed check on sudoer file"
    exit 1
else
    sudo cp $VERB -f $DATADIR/sudoers "/etc/sudoers.d/50-iukbtw"
fi
# Add udev rules for KMonad
# (https://github.com/kmonad/kmonad/blob/master/doc/faq.md#q-how-do-i-get-uinput-permissions)
# (https://github.com/kmonad/kmonad/issues/160#issuecomment-766121884)
sudo groupadd -f uinput
sudo usermod -aG uinput $USER
sudo usermod -aG input $USER
sudo cp -f $VERB $DATADIR/uinput.conf /etc/modules-load.d/
sudo cp -f $VERB $DATADIR/90-uinput.rules /etc/udev/rules.d/

title "Copying user files @ $HOME"
[[ $QUIET ]] || showdir $SRCDIR/home
cd $SRCDIR/home
cp $VERB -rf --parents . $HOME
cd $TMPDIR


title "Cleaning up"
[[ ! $VERB ]] || showdir $TMPDIR
sudo rm -rf $TMPDIR


title "Done."
[[
    -n $(groups | grep input) &&
    -n $(groups | grep uinput) &&
    -n $(groups | grep iukbtw)
]] || echo "Please login again for group config to apply."
[[ -n $(echo $PATH | grep $BINDIR) ]] || echo "Please login again for PATH to apply"

